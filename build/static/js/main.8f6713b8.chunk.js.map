{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","constants/roles.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Session/withEmailVerification.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignInWithFacebook","facebookProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doSendEmailVerification","sendEmailVerification","url","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","users","app","initializeApp","emailAuthProvider","EmailAuthProvider","database","GoogleAuthProvider","FacebookAuthProvider","_ref","type","onClick","HOME","ADMIN","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","needsEmailVerification","map","provider","providerId","includes","withEmailVerification","WithEmailVerification","onSendEmailVerification","isSent","disabled","NavigationAuth","Link","to","ROUTES","ROLES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","isAdmin","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","onSubmit","event","_this$state","set","catch","code","message","preventDefault","onChange","defineProperty","target","name","onChangeCheckbox","checked","_this$state2","isInvalid","placeholder","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInGoogleBase","socialAuthUser","displayName","SignInFacebookBase","_this3","additionalUserInfo","profile","SignInForm","SignInGoogle","SignInFacebook","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","PasswordChangeForm","SIGN_IN_METHODS","id","LoginManagementBase","onDefaultLoginLink","credential","linkAndRetrieveDataWithCredential","fetchSignInMethods","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onUnlink","unlink","signInMethod","onlyOneLeft","length","isEnabled","Account_DefaultLoginToggle","onLink","Account_SocialLoginToggle","SocialLoginToggle","DefaultLoginToggle","_this$props","LoginManagement","PasswordChange","UserListBase","loading","on","usersObject","usersList","keys","off","pathname","UserItemBase","onSendPasswordResetEmail","_this4","params","UserList","UserItem","Switch","Route","exact","path","component","BrowserRouter","components_Navigation","LandingPage","HomePage","AccountPage","AdminPage","ReactDOM","render","context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f6713b8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n/*\nconst config = {\n    apiKey: \"AIzaSyDlp_TNNMiNHNsWnPyExu1zPsAca2sM6vw\",\n    authDomain: \"fir-auth-ae4f4.firebaseapp.com\",\n    databaseURL: \"https://fir-auth-ae4f4.firebaseio.com\",\n    projectId: \"fir-auth-ae4f4\",\n    storageBucket: \"fir-auth-ae4f4.appspot.com\",\n    messagingSenderId: \"111479692025\"\n};\n*/\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  };\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n    this.auth = app.auth();\n    this.db = app.database();\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n\n    this.facebookProvider = new app.auth.FacebookAuthProvider();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () =>\n    this.auth.signInWithPopup(this.googleProvider);\n\n  doSignInWithFacebook = () =>\n    this.auth.signInWithPopup(this.facebookProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n    url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });\n\n\n  // *** Merge Auth and DB User API *** //\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.user(authUser.uid)\n        .once('value')\n        .then(snapshot => {\n          const dbUser = snapshot.val();\n\n          // default empty roles\n          if (!dbUser.roles) {\n            dbUser.roles = [];\n          }\n\n          // merge auth and db user\n          authUser = {\n            uid: authUser.uid,\n            email: authUser.email,\n            ...dbUser,\n            emailVerified: authUser.emailVerified,\n            providerData: authUser.providerData,\n          };\n\n          next(authUser);\n        });\n      } else {\n        fallback();\n        }\n    });  \n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  users = () => this.db.ref('users');\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","export const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const LANDING = '/';\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const ADMIN_DETAILS = '/admin/:id';\n","export const ADMIN = 'ADMIN';","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n      \n          this.setState({ authUser: null });\n        },\n      );\n      }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n\n    componentDidMount() {\nthis.listener = this.props.firebase.onAuthUserListener(\nauthUser => {\nif (!condition(authUser)) {\n\nthis.props.history.push(ROUTES.SIGN_IN);\n}\n},\n() => this.props.history.push(ROUTES.SIGN_IN),\n);\n}\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withEmailVerification = Component => {\n    class WithEmailVerification extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = { isSent: false };\n        }\n        onSendEmailVerification = () => {\n            this.props.firebase.doSendEmailVerification()\n            .then(() => this.setState({ isSent: true }));\n        }\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                {authUser => \n                    needsEmailVerification(authUser) ? (\n                        <div>\n                        {this.state.isSent ? (\n                            <p>\n                                E-Mail confirmation sent: Check you E-Mails (Spam\n                                folder included) for a confirmation E-Mail.\n                                Refresh this page once you confirmed your E-Mail.\n                            </p>\n                        ) : (\n                            <p>\n                                Verify your E-Mail: Check you E-Mails (Spam folder\n                                included) for a confirmation E-Mail or send\n                                another confirmation E-Mail.\n                            </p>\n                        )}\n                            <button\n                            type=\"button\"\n                            onClick={this.onSendEmailVerification}\n                            disabled={this.state.isSent}\n                            >\n                                Send confirmation E-Mail\n                            </button>\n                        </div>\n                    ) : (\n                        <Component {...this.props} />\n                    )\n                \n                }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n    return withFirebase(WithEmailVerification);\n};\n\nconst needsEmailVerification = authUser =>\n    authUser &&\n    !authUser.emailVerified &&\n    authUser.providerData\n        .map(provider => provider.providerId)\n        .includes('password');\n\nexport default withEmailVerification;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nimport { AuthUserContext } from '../Session';\n\nconst Navigation = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      {authUser =>\n        authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    \n    {authUser.roles.includes(ROLES.ADMIN) && (\n    <li>\n    <Link to={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    )}\n    <li>\n      <SignOutButton />\n    </li>\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul>\n    <li>\n      <Link to={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nexport default Navigation;\n","import React from 'react';\n\nconst Landing = () => (\n  <div>\n    <h1>Landing</h1>\n  </div>\n);\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\nconst ERROR_MSG_ACCOUNT_EXISTS = `\nAn account with this E-Mail address already exists.\nTry to login with this account instead. If you think the\naccount is already used from one of the social logins, try\nto sign-in with one of them. Afterward, associate your accounts\non your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n\n    const roles = [];\n    if (isAdmin) {\n      roles.push(ROLES.ADMIN);\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n            roles,\n          })\n          .then(() => {\n            return this.props.firebase.doSendEmailVerification();\n            })\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n              error.message = ERROR_MSG_ACCOUNT_EXISTS;\n            }\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n    };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <label>\n          Admin:\n          <input\n          name=\"isAdmin\"\n          type=\"checkbox\"\n          checked={isAdmin}\n          onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\n\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  onSubmit = event => {\n    this.props.firebase\n    .doSignInWithGoogle()\n    .then(socialAuthUser => {\n      // Create a user in your Firebase Realtime Database too\n      return this.props.firebase\n        .user(socialAuthUser.user.uid)\n        .set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: [],\n        });\n      })\n    .then(() => {\n      this.setState({ error: null });\n      this.props.history.push(ROUTES.HOME);\n    })\n    .catch(error => {\n      if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n        error.message = ERROR_MSG_ACCOUNT_EXISTS;\n      }\n      this.setState({ error });\n    });\n\n  event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n    return (\n      <form onSubmit={this.onSubmit}>\n      <button type=\"submit\">Sign In with Google</button>\n      {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase\n          .user(socialAuthUser.user.uid)\n          .set({\n            username: socialAuthUser.additionalUserInfo.profile.name,\n            email: socialAuthUser.additionalUserInfo.profile.email,\n            roles: [],\n          });\n        })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n  \n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n      }\n      this.setState({ error });\n    });\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n    return (\n      <form onSubmit={this.onSubmit}>\n      <button type=\"submit\">Sign In with Facebook</button>\n      {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(withRouter,withFirebase,)(SignInFormBase);\n\nconst SignInGoogle = compose(withRouter,withFirebase,)(SignInGoogleBase);\n\nconst SignInFacebook = compose(withRouter,withFirebase,)(SignInFacebookBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook };\n","import React from 'react';\nimport { compose } from 'recompose';\nimport { withAuthorization, withEmailVerification } from '../Session';\n\n\n\nconst HomePage = () => (\n  <div>\n    <h1>Home Page</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n  </div>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n  )(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);\n","import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification,\n  } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nimport { withFirebase } from '../Firebase';\n\nconst SIGN_IN_METHODS = [\n  {\n  id: 'password',\n  provider: null,\n  },\n  {\n  id: 'google.com',\n  provider: 'googleProvider',\n  },\n  {\n  id: 'facebook.com',\n  provider: 'facebookProvider',\n  },\n  \n  ];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n        <LoginManagement authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n    };\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n        .then(activeSignInMethods =>\n          this.setState({ activeSignInMethods, error: null }),\n        )\n        .catch(error => this.setState({ error }));\n  }\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = () => {\n    \n  }\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n    return (\n      <div>\n      Sign In Methods:\n      <ul>\n      {SIGN_IN_METHODS.map(signInMethod => {\n        const onlyOneLeft = activeSignInMethods.length === 1;\n        const isEnabled = activeSignInMethods.includes(\n        signInMethod.id,\n        );\n\n        return (\n          <li key={signInMethod.id}>\n          {signInMethod.id === 'password' ? (\n            <DefaultLoginToggle\n            onlyOneLeft={onlyOneLeft}\n            isEnabled={isEnabled}\n            signInMethod={signInMethod}\n            onLink={this.onDefaultLoginLink}\n            onUnlink={this.onUnlink}\n            />\n            ) : (\n            <SocialLoginToggle\n            onlyOneLeft={onlyOneLeft}\n            isEnabled={isEnabled}\n            signInMethod={signInMethod}\n            onLink={this.onSocialLoginLink}\n            onUnlink={this.onUnlink}\n            />\n            )}\n          </li>\n        );\n      })}\n      </ul>\n      {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n                    onlyOneLeft,\n                    isEnabled,\n                    signInMethod,\n                    onLink,\n                    onUnlink,\n                    }) =>\n                    isEnabled ? (\n                      <button\n                      type=\"button\"\n                      onClick={() => onUnlink(signInMethod.id)}\n                      disabled={onlyOneLeft}\n                      >\n                      Deactivate {signInMethod.id}\n                      </button>\n                    ) : (\n                      <button\n                      type=\"button\"\n                      onClick={() => onLink(signInMethod.provider)}\n                      >\n                      Link {signInMethod.id}\n                      </button>\n);\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const {\n    onlyOneLeft,\n    isEnabled,\n    signInMethod,\n    onUnlink,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n    const isInvalid =\n    passwordOne !== passwordTwo || passwordOne === '';\n    return isEnabled ? (\n      <button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n      >\n      Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n  )(AccountPage);","import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\n\nconst AdminPage = () => (\n  <div>\n  <h1>Admin</h1>\n  <p>The Admin Page is accessible by every signed in admin user.</p>\n  <Switch>\n  <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n  <Route exact path={ROUTES.ADMIN} component={UserList} />\n  </Switch>\n  </div>\n  );\n\n  class UserListBase extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: false,\n        users: [],\n      };\n    }\n    componentDidMount() {\n      this.setState({ loading: true });\n      this.props.firebase.users().on('value', snapshot => {\n        const usersObject = snapshot.val();\n        \n        const usersList = Object.keys(usersObject).map(key => ({\n          ...usersObject[key],\n          uid: key,\n        }));\n\n        this.setState({\n        users: usersList,\n        loading: false,\n        });\n      });\n    }\n    componentWillUnmount() {\n      this.props.firebase.users().off();\n    }\n    render() {\n      const { users, loading } = this.state;\n\n      return (\n        <div>\n          <h2>Users</h2>\n          {loading && <div>Loading ...</div>}\n            <ul>\n             {users.map(user => (\n                <li key={user.uid}>\n                  <span>\n                    <strong>ID:</strong> {user.uid}\n                  </span>\n                  Admin Dashboard 143\n                  <span>\n                     <strong>E-Mail:</strong> {user.email}\n                  </span>\n                  <span>\n                    <strong>Username:</strong> {user.username}\n                  </span>\n                  <span>\n                    <Link to={{\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                    state: { user },\n                    }}>\n                    Details\n                    </Link>\n                  </span>\n                </li>\n              ))}\n            </ul>\n        </div>\n      );   \n    }\n}\n\nclass UserItemBase extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: false,\n        user: null,\n        ...props.location.state,\n      };\n    }\n    componentDidMount() {\n      if (this.state.user) {\n        return;\n      }\n      this.setState({ loading: true });\n      this.props.firebase\n      .user(this.props.match.params.id)\n      .on('value', snapshot => {\n        this.setState({\n          user: snapshot.val(),\n          loading: false,\n        });\n      });\n    }\n    componentWillUnmount() {\n      this.props.firebase.user(this.props.match.params.id).off();\n    }\n\n    onSendPasswordResetEmail = () => {\n      this.props.firebase.doPasswordReset(this.state.user.email);\n    }\n    \n    render() {\n      const { user, loading } = this.state;\n        return (\n          <div>\n            <h2>User ({this.props.match.params.id})</h2>\n            {loading && <div>Loading ...</div>}\n            {user && (\n            <div>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              \n              </span>\n              <span>\n                <button\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n                >\n                  Send Password Reset\n                </button>\n              </span>\n            </div>\n          )}\n          </div>\n      );\n    }\n  }\n\n\n\nconst condition = authUser => authUser && authUser.roles.includes(ROLES.ADMIN);\n\nconst UserList = withFirebase(UserListBase);\nconst UserItem = withFirebase(UserItemBase);\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n  withFirebase,\n  )(AdminPage);\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n\n      <hr />\n\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route\n        exact\n        path={ROUTES.PASSWORD_FORGET}\n        component={PasswordForgetPage}\n      />\n      <Route exact path={ROUTES.HOME} component={HomePage} />\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}