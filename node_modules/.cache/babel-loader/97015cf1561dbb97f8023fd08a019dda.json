{"ast":null,"code":"import _objectSpread from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tod/Webb/grextest/Grex/src/components/Geolocated/index.js\";\nimport React, { Component, createRef } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from 'leaflet';\nimport ReactDOMServer from 'react-dom/server';\nimport { withFirebase } from '../Firebase';\nimport Icon from './SVGIconComponent';\n\nvar LocatedTwo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LocatedTwo, _Component);\n\n  function LocatedTwo(props) {\n    var _this;\n\n    _classCallCheck(this, LocatedTwo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocatedTwo).call(this, props));\n\n    _this.calculateDistance = function (lat1, lon1, lat2, lon2) {\n      var R = 6371; // km (change this constant to get miles)\n\n      var dLat = (lat2 - lat1) * Math.PI / 180;\n      var dLon = (lon2 - lon1) * Math.PI / 180;\n      var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      var d = R * c;\n      return Math.round(d * 1000);\n    };\n\n    _this.updatePosition = function (position) {\n      _this.setState({\n        browserCoords: {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }\n      });\n\n      if (position.coords && _this.state.dbCoords) {\n        var _position$coords = position.coords,\n            lat1 = _position$coords.latitude,\n            lng1 = _position$coords.longitude;\n        var _this$state$dbCoords = _this.state.dbCoords,\n            lat2 = _this$state$dbCoords.latitude,\n            lng2 = _this$state$dbCoords.longitude;\n\n        var dist = _this.calculateDistance(lat1, lng1, lat2, lng2);\n\n        if (dist > 1) {\n          _this.writeUserPositionToDB(position.coords);\n        }\n      }\n    };\n\n    _this.getRandomNumber = function () {\n      return Math.floor(Math.random() * 100) + 1;\n    };\n\n    _this.makeMarkers = function (users, markers) {\n      var userList = _this.state.users;\n      var markerList = userList.map(function (user) {\n        return {\n          latitude: user.position.latitude,\n          longitude: user.position.longitude,\n          username: user.username,\n          perc: _this.getRandomNumber()\n        };\n      });\n      return markerList;\n    };\n\n    _this.getUserPositionFromDB = function () {\n      _this.props.firebase.user(_this.props.userId).child(\"position\").once(\"value\", function (snapshot) {\n        var userPosition = snapshot.val();\n        console.log(JSON.parse(JSON.stringify(userPosition)));\n\n        _this.setState({\n          dbCoords: userPosition\n        });\n      });\n    };\n\n    _this.writeUserPositionToDB = function (position) {\n      var latitude = position.latitude,\n          longitude = position.longitude;\n\n      _this.props.firebase.user(_this.props.userId).update({\n        position: {\n          latitude: latitude,\n          longitude: longitude\n        }\n      }); //this.setState({ dbCoords: position });\n\n\n      _this.getUserPositionFromDB();\n    };\n\n    _this.state = {\n      browserCoords: null,\n      dbCoords: null,\n      users: [],\n      loading: false,\n      perc: 0,\n      markers: []\n    };\n    return _this;\n  }\n\n  _createClass(LocatedTwo, [{\n    key: \"onListenForUsers\",\n    value: function onListenForUsers() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.props.firebase.users().on('value', function (snapshot) {\n        var userObject = snapshot.val();\n\n        if (userObject) {\n          //convert user list from snapshot\n          var userList = Object.keys(userObject).map(function (key) {\n            return _objectSpread({}, userObject[key], {\n              uid: key\n            });\n          });\n\n          _this2.setState({\n            users: userList,\n            loading: false\n          });\n        } else {\n          _this2.setState({\n            users: null,\n            loading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onListenForUsers();\n      this.getUserPositionFromDB();\n      this.watchId = navigator.geolocation.watchPosition(this.updatePosition, function (error) {\n        console.log(\"error\" + error);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 2000,\n        maximumAge: 0,\n        distanceFilter: 1\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.firebase.users().off();\n      navigator.geolocation.clearWatch(this.watchId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log('logga: ' + JSON.stringify(this.state.users));\n      console.log('logga:  ' + JSON.stringify(this.makeMarkers()));\n      var markers = this.makeMarkers();\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.state.browserCoords ? React.createElement(MyMap, {\n        perc: this.state.perc,\n        markers: markers,\n        position: Object.values(this.state.browserCoords),\n        zoom: 13,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return LocatedTwo;\n}(Component);\n\nvar UserList = function UserList(_ref) {\n  var users = _ref.users;\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, users.map(function (user) {\n    return React.createElement(UserItem, {\n      key: user.uid,\n      username: user.username,\n      longitude: user.position.longitude,\n      latitude: user.position.latitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    });\n  }));\n};\n\nvar UserItem = function UserItem(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, props.username, \", longitude \", props.longitude, \" : latitude \", props.latitude);\n};\n\nvar Coords = function Coords(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, props.position ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, props.position.latitude), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, props.position.longitude)) : null);\n};\n\nvar MyMap = function MyMap(props) {\n  return React.createElement(Map, {\n    zoomControl: false,\n    scrollWheelZoom: false,\n    zoom: props.zoom,\n    center: [59.312175, 18.073377900000004],\n    onClick: props.onMapClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), props.markers.map(function (marker, index) {\n    //const L = require('leaflet');\n    var customMarker = L.divIcon({\n      html: ReactDOMServer.renderToString(React.createElement(Icon, {\n        perc: marker.perc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })),\n      className: 'custom icon'\n    });\n    return React.createElement(Marker, {\n      key: index,\n      icon: customMarker,\n      position: [marker.latitude, marker.longitude],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, marker.username));\n  }));\n};\n\nexport default withFirebase(LocatedTwo);\nexport { MyMap };","map":{"version":3,"sources":["/Users/tod/Webb/grextest/Grex/src/components/Geolocated/index.js"],"names":["React","Component","createRef","Map","TileLayer","Marker","Popup","L","ReactDOMServer","withFirebase","Icon","LocatedTwo","props","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","d","round","updatePosition","position","setState","browserCoords","latitude","coords","longitude","state","dbCoords","lng1","lng2","dist","writeUserPositionToDB","getRandomNumber","floor","random","makeMarkers","users","markers","userList","markerList","map","user","username","perc","getUserPositionFromDB","firebase","userId","child","once","snapshot","userPosition","val","console","log","JSON","parse","stringify","update","loading","on","userObject","Object","keys","key","uid","onListenForUsers","watchId","navigator","geolocation","watchPosition","error","enableHighAccuracy","timeout","maximumAge","distanceFilter","off","clearWatch","values","UserList","UserItem","Coords","MyMap","zoom","onMapClick","marker","index","customMarker","divIcon","html","renderToString","className"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from 'leaflet';\nimport ReactDOMServer from 'react-dom/server';\n\nimport { withFirebase } from '../Firebase';\nimport Icon from './SVGIconComponent';\n\nclass LocatedTwo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      browserCoords: null,\n      dbCoords: null,\n      users: [],\n      loading: false,\n      perc: 0,\n      markers: [],\n    };\n  }\n\n  calculateDistance = (lat1, lon1, lat2, lon2) => {\n    var R = 6371; // km (change this constant to get miles)\n    var dLat = ((lat2 - lat1) * Math.PI) / 180;\n    var dLon = ((lon2 - lon1) * Math.PI) / 180;\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos((lat1 * Math.PI) / 180) *\n        Math.cos((lat2 * Math.PI) / 180) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n\n    return Math.round(d * 1000);\n  };\n\n  updatePosition = position => {\n    this.setState({\n      browserCoords: {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      }\n    });\n    if (position.coords && this.state.dbCoords) {\n      const { latitude: lat1, longitude: lng1 } = position.coords;\n      const { latitude: lat2, longitude: lng2 } = this.state.dbCoords;\n      const dist = this.calculateDistance(lat1, lng1, lat2, lng2);\n      if (dist > 1) {\n        this.writeUserPositionToDB(position.coords);\n      }\n    }\n  };\n\n  getRandomNumber = () => {\n    return Math.floor(Math.random() * 100) + 1             \n  }\n\n  makeMarkers = (users, markers) => {\n\n    const userList = this.state.users;\n    const markerList = userList.map(user =>{\n        \n        return {latitude: user.position.latitude, longitude: user.position.longitude, username: user.username, perc: this.getRandomNumber() };\n    });\n\n    return markerList;\n\n  }\n\n  onListenForUsers() {    \n\n   \n\n    this.setState({ loading: true });\n    this.props.firebase.users().on('value', snapshot => {\n      \n      const userObject = snapshot.val();\n\n      if (userObject) {\n          //convert user list from snapshot\n          const userList = Object.keys(userObject).map(key => ({\n            ...userObject[key],\n            uid: key,\n          }));\n\n          this.setState({ users: userList, loading: false});\n      } else {\n        this.setState({ users: null, loading: false })\n      }\n    });\n    \n  }\n  \n\n  getUserPositionFromDB = () => {\n    \n    this.props.firebase\n      .user(this.props.userId)\n      .child(\"position\")\n      .once(\"value\", snapshot => {\n        const userPosition = snapshot.val();\n        console.log(JSON.parse(JSON.stringify(userPosition)));\n        this.setState({ dbCoords: userPosition });\n      });\n  };\n\n  writeUserPositionToDB = position => {\n    const { latitude, longitude } = position;\n\n    this.props.firebase\n      .user(this.props.userId)\n      .update({ position: { latitude: latitude, longitude: longitude } });\n    //this.setState({ dbCoords: position });\n    this.getUserPositionFromDB();\n  };\n\n  componentDidMount() {\n \n\n    this.onListenForUsers();    \n\n    this.getUserPositionFromDB();\n    this.watchId = navigator.geolocation.watchPosition(\n      this.updatePosition,\n      error => {\n        console.log(\"error\" + error);\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 2000,\n        maximumAge: 0,\n        distanceFilter: 1\n      }\n    );\n  }\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n    \n    navigator.geolocation.clearWatch(this.watchId);\n  }\n\n  render() {\n    //console.log('logga: ' + JSON.stringify(this.state.users));\n    console.log('logga:  ' + JSON.stringify(this.makeMarkers()))\n    const markers = this.makeMarkers();\n    \n    return (\n      <div>\n      {/* <UserList users={this.state.users} /> */}\n        {this.state.browserCoords ? (\n          <MyMap perc={this.state.perc}\n            markers={markers}\n            position={Object.values(this.state.browserCoords)}\n            zoom={13}\n          />\n        ) : null}\n         {/*<div>Geolocation</div>\n        <div>\n          <p>Coords from Browser</p>\n          <Coords position={this.state.browserCoords} />\n          <p>Coords from DB</p>\n          <Coords position={this.state.dbCoords} />\n        </div>         */}\n      </div>\n    );\n    \n  }\n}\n\nconst UserList = ({ users }) => (\n  \n    <ul>\n    \n      {users.map(user => (\n        <UserItem \n          key={user.uid} \n          username={user.username} \n          longitude={user.position.longitude}\n          latitude={user.position.latitude}\n        />\n      ))}\n    </ul>\n  );\n\nconst UserItem = (props) => (\n    <div>\n        {props.username}, longitude {props.longitude} : latitude {props.latitude}\n    </div>\n);\n\nconst Coords = props => (\n  <div>\n    {props.position ? (\n      <div>\n        <div>{props.position.latitude}</div>\n        <div>{props.position.longitude}</div>\n      </div>\n    ) : null}\n  </div>\n);\n\nconst MyMap = props => {\n  \n  return (\n  <Map\n    zoomControl={false}\n    scrollWheelZoom={false}\n    \n    zoom={props.zoom}\n    center={[59.312175,18.073377900000004]}\n    \n    onClick={props.onMapClick}\n  >\n    <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n    />\n    {props.markers.map((marker,index) => {\n        //const L = require('leaflet');\n        const customMarker = L.divIcon({ html: ReactDOMServer.renderToString(<Icon perc={marker.perc}/>), className: 'custom icon'})\n        return(\n      <Marker key={index} icon={customMarker}   position={[marker.latitude, marker.longitude]}>\n        <Popup >\n          {marker.username}\n        </Popup>\n      </Marker>\n      )\n    })}\n  </Map>\n);\n  }\nexport default withFirebase(LocatedTwo);\n\nexport { MyMap };\n"]},"metadata":{},"sourceType":"module"}