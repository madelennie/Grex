{"ast":null,"code":"import _classCallCheck from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tod/Webb/grextest/Grex/src/components/Session/withEmailVerification.js\";\nimport React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nvar withEmailVerification = function withEmailVerification(Component) {\n  var WithEmailVerification =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(WithEmailVerification, _React$Component);\n\n    function WithEmailVerification(props) {\n      var _this;\n\n      _classCallCheck(this, WithEmailVerification);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(WithEmailVerification).call(this, props));\n\n      _this.onSendEmailVerification = function () {\n        _this.props.firebase.doSendEmailVerification().then(function () {\n          return _this.setState({\n            isSent: true\n          });\n        });\n      };\n\n      _this.state = {\n        isSent: false\n      };\n      return _this;\n    }\n\n    _createClass(WithEmailVerification, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return React.createElement(AuthUserContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, function (authUser) {\n          return needsEmailVerification(authUser) ? React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, _this2.state.isSent ? React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, \"E-Mail confirmation sent: Check you E-Mails (Spam folder included) for a confirmation E-Mail. Refresh this page once you confirmed your E-Mail.\") : React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, \"Verify your E-Mail: Check you E-Mails (Spam folder included) for a confirmation E-Mail or send another confirmation E-Mail.\"), React.createElement(\"button\", {\n            type: \"button\",\n            onClick: _this2.onSendEmailVerification,\n            disabled: _this2.state.isSent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \"Send confirmation E-Mail\")) : React.createElement(Component, Object.assign({}, _this2.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }));\n        });\n      }\n    }]);\n\n    return WithEmailVerification;\n  }(React.Component);\n\n  return withFirebase(WithEmailVerification);\n};\n\nvar needsEmailVerification = function needsEmailVerification(authUser) {\n  return authUser && !authUser.emailVerified && authUser.providerData.map(function (provider) {\n    return provider.providerId;\n  }).includes('password');\n};\n\nexport default withEmailVerification;","map":{"version":3,"sources":["/Users/tod/Webb/grextest/Grex/src/components/Session/withEmailVerification.js"],"names":["React","AuthUserContext","withFirebase","withEmailVerification","Component","WithEmailVerification","props","onSendEmailVerification","firebase","doSendEmailVerification","then","setState","isSent","state","authUser","needsEmailVerification","emailVerified","providerData","map","provider","providerId","includes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,SAAS,EAAI;AAAA,MACjCC,qBADiC;AAAA;AAAA;AAAA;;AAEnC,mCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iGAAMA,KAAN;;AADe,YAInBC,uBAJmB,GAIO,YAAM;AAC5B,cAAKD,KAAL,CAAWE,QAAX,CAAoBC,uBAApB,GACCC,IADD,CACM;AAAA,iBAAM,MAAKC,QAAL,CAAc;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAd,CAAN;AAAA,SADN;AAEH,OAPkB;;AAEf,YAAKC,KAAL,GAAa;AAAED,QAAAA,MAAM,EAAE;AAAV,OAAb;AAFe;AAGlB;;AALkC;AAAA;AAAA,+BAU1B;AAAA;;AACL,eACI,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,UAAAE,QAAQ;AAAA,iBACLC,sBAAsB,CAACD,QAAD,CAAtB,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC,MAAI,CAACD,KAAL,CAAWD,MAAX,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+JADH,GAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2IARJ,EAcI;AACA,YAAA,IAAI,EAAC,QADL;AAEA,YAAA,OAAO,EAAE,MAAI,CAACL,uBAFd;AAGA,YAAA,QAAQ,EAAE,MAAI,CAACM,KAAL,CAAWD,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAdJ,CADJ,GAwBI,oBAAC,SAAD,oBAAe,MAAI,CAACN,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAzBC;AAAA,SADT,CADJ;AAiCH;AA5CkC;;AAAA;AAAA,IACHN,KAAK,CAACI,SADH;;AA8CvC,SAAOF,YAAY,CAACG,qBAAD,CAAnB;AACH,CA/CD;;AAiDA,IAAMU,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAD,QAAQ;AAAA,SACnCA,QAAQ,IACR,CAACA,QAAQ,CAACE,aADV,IAEAF,QAAQ,CAACG,YAAT,CACKC,GADL,CACS,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,UAAb;AAAA,GADjB,EAEKC,QAFL,CAEc,UAFd,CAHmC;AAAA,CAAvC;;AAOA,eAAelB,qBAAf","sourcesContent":["import React from 'react';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withEmailVerification = Component => {\n    class WithEmailVerification extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = { isSent: false };\n        }\n        onSendEmailVerification = () => {\n            this.props.firebase.doSendEmailVerification()\n            .then(() => this.setState({ isSent: true }));\n        }\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                {authUser => \n                    needsEmailVerification(authUser) ? (\n                        <div>\n                        {this.state.isSent ? (\n                            <p>\n                                E-Mail confirmation sent: Check you E-Mails (Spam\n                                folder included) for a confirmation E-Mail.\n                                Refresh this page once you confirmed your E-Mail.\n                            </p>\n                        ) : (\n                            <p>\n                                Verify your E-Mail: Check you E-Mails (Spam folder\n                                included) for a confirmation E-Mail or send\n                                another confirmation E-Mail.\n                            </p>\n                        )}\n                            <button\n                            type=\"button\"\n                            onClick={this.onSendEmailVerification}\n                            disabled={this.state.isSent}\n                            >\n                                Send confirmation E-Mail\n                            </button>\n                        </div>\n                    ) : (\n                        <Component {...this.props} />\n                    )\n                \n                }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n    return withFirebase(WithEmailVerification);\n};\n\nconst needsEmailVerification = authUser =>\n    authUser &&\n    !authUser.emailVerified &&\n    authUser.providerData\n        .map(provider => provider.providerId)\n        .includes('password');\n\nexport default withEmailVerification;"]},"metadata":{},"sourceType":"module"}