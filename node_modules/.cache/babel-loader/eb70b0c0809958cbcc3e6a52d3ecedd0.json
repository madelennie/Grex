{"ast":null,"code":"import _objectSpread from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tod/Webb/grextest/Grex/src/components/Event/index.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport DateTimePicker from 'react-datetime-picker';\nimport { withFirebase } from '../Firebase';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../Session';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\nimport { MyMap } from '../Geolocated';\n\nvar EventPage = function EventPage() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Events\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"The Event Page is accessible by every signed in admin user.\"), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: ROUTES.ADMIN_DETAILS,\n    component: UserItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: ROUTES.EVENT,\n    component: UserList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\n\nvar UserListBase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserListBase, _Component);\n\n  function UserListBase(props) {\n    var _this;\n\n    _classCallCheck(this, UserListBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserListBase).call(this, props));\n\n    _this.onChangeText = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.onCreateEvent = function (event, authUser) {\n      event.preventDefault();\n      console.log('datum' + _this.state.event_datetime);\n\n      _this.props.firebase.events().push({\n        event_name: _this.state.event_name,\n        event_latitude: _this.state.event_latitude,\n        event_longitude: _this.state.event_longitude,\n        event_datetime: _this.state.event_datetime,\n        //'Wed Feb 20 2019 14:45:13 GMT+0100 (centraleuropeisk normaltid)',            \n        event_participant_list_id: _this.state.users,\n        userId: authUser.uid,\n        createdAt: _this.props.firebase.serverValue.TIMESTAMP\n      });\n\n      _this.setState({\n        event_name: '',\n        event_latitude: '',\n        event_longitude: '',\n        event_datetime: '',\n        event_participant_list_id: []\n      });\n    };\n\n    _this.onMapClick = function (event) {\n      console.log('koordinater: ' + event.latlng);\n      var latitude = event.latlng.lat;\n      var longitude = event.latlng.lng;\n      _this.state.marker = [];\n      var marker = _this.state.marker;\n      marker.push({\n        latitude: latitude,\n        longitude: longitude\n      });\n\n      _this.setState({\n        event_latitude: latitude,\n        event_longitude: longitude,\n        marker: marker\n      });\n    };\n\n    _this.onChangeDateTime = function (date) {\n      return _this.setState({\n        date: date\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      users: [],\n      event_name: '',\n      event_latitude: '',\n      event_longitude: '',\n      event_participant_list_id: [],\n      marker: [],\n      event_datetime: ''\n    };\n    return _this;\n  }\n\n  _createClass(UserListBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.props.firebase.users().on('value', function (snapshot) {\n        var usersObject = snapshot.val();\n        var usersList = Object.keys(usersObject).map(function (key) {\n          return _objectSpread({}, usersObject[key], {\n            uid: key\n          });\n        });\n\n        _this2.setState({\n          users: usersList,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.firebase.users().off();\n    }\n  }, {\n    key: \"render\",\n    // makeMarker = (users, markers) => {\n    //   const userList = this.state.users;\n    //   const markerList = userList.map(user =>{\n    //       return {latitude: user.position.latitude, longitude: user.position.longitude, username: user.username, perc: this.getRandomNumber() };\n    //   });\n    //   return markerList;\n    // }\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          users = _this$state.users,\n          loading = _this$state.loading,\n          event_name = _this$state.event_name,\n          event_latitude = _this$state.event_latitude,\n          event_longitude = _this$state.event_longitude,\n          event_datetime = _this$state.event_datetime,\n          event_participant_list_id = _this$state.event_participant_list_id;\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, function (authUser) {\n        return React.createElement(\"form\", {\n          onSubmit: function onSubmit(event) {\n            return _this3.onCreateEvent(event, authUser);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          name: \"event_name\",\n          type: \"text\",\n          value: event_name,\n          onChange: _this3.onChangeText,\n          placeholder: \"Event name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          name: \"event_longitude\",\n          type: \"text\",\n          value: event_longitude,\n          onChange: _this3.onChangeText,\n          placeholder: \"Longitude\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          name: \"event_latitude\",\n          type: \"text\",\n          value: event_latitude,\n          onChange: _this3.onChangeText,\n          placeholder: \"Latitude\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          name: \"event_datetime\",\n          type: \"text\",\n          value: event_datetime,\n          onChange: _this3.onChangeText,\n          placeholder: \"Time\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          name: \"event_participant_list_id\",\n          type: \"text\",\n          value: event_participant_list_id,\n          onChange: _this3.onChangeText,\n          placeholder: \"List of Participants\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, \"Send\"), console.log(_this3.state.marker), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(DateTimePicker, {\n          onChange: _this3.onChangeDateTime,\n          value: _this3.state.event_datetime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }), \"Klick on map to select location for event\", React.createElement(MyMap, {\n          perc: '10',\n          markers: _this3.state.marker,\n          position: [80, 100],\n          zoom: 13,\n          onMapClick: function onMapClick(event) {\n            return _this3.onMapClick(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \"List of events\"), loading && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"Loading ...\"), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, users.map(function (user) {\n          return React.createElement(\"li\", {\n            key: user.uid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175\n            },\n            __self: this\n          }, \"ID:\"), \" \", user.uid), \"Admin Dashboard 143\", React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, \"E-Mail:\"), \" \", user.email), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }, \"Username:\"), \" \", user.username), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: {\n              pathname: \"\".concat(ROUTES.ADMIN, \"/\").concat(user.uid),\n              state: {\n                user: user\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, \"Details\")));\n        }))));\n      });\n    }\n  }]);\n\n  return UserListBase;\n}(Component);\n\nvar UserItemBase =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(UserItemBase, _Component2);\n\n  function UserItemBase(props) {\n    var _this4;\n\n    _classCallCheck(this, UserItemBase);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(UserItemBase).call(this, props));\n\n    _this4.onSendPasswordResetEmail = function () {\n      _this4.props.firebase.doPasswordReset(_this4.state.user.email);\n    };\n\n    _this4.state = _objectSpread({\n      loading: false,\n      user: null\n    }, props.location.state);\n    return _this4;\n  }\n\n  _createClass(UserItemBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this5 = this;\n\n      if (this.state.user) {\n        return;\n      }\n\n      this.setState({\n        loading: true\n      });\n      this.props.firebase.user(this.props.match.params.id).on('value', function (snapshot) {\n        _this5.setState({\n          user: snapshot.val(),\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.firebase.user(this.props.match.params.id).off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          user = _this$state2.user,\n          loading = _this$state2.loading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"User (\", this.props.match.params.id, \")\"), loading && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Loading ...\"), user && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"ID:\"), \" \", user.uid), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"E-Mail:\"), \" \", user.email), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Username:\"), \" \", user.username), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.onSendPasswordResetEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Send Password Reset\"))));\n    }\n  }]);\n\n  return UserItemBase;\n}(Component);\n\nvar condition = function condition(authUser) {\n  return authUser && authUser.roles.includes(ROLES.ADMIN);\n};\n\nvar UserList = withFirebase(UserListBase);\nvar UserItem = withFirebase(UserItemBase);\nexport default compose(withEmailVerification, withAuthorization(condition), withFirebase)(EventPage);","map":{"version":3,"sources":["/Users/tod/Webb/grextest/Grex/src/components/Event/index.js"],"names":["React","Component","Switch","Route","Link","compose","DateTimePicker","withFirebase","AuthUserContext","withAuthorization","withEmailVerification","ROLES","ROUTES","MyMap","EventPage","ADMIN_DETAILS","UserItem","EVENT","UserList","UserListBase","props","onChangeText","event","setState","target","name","value","onCreateEvent","authUser","preventDefault","console","log","state","event_datetime","firebase","events","push","event_name","event_latitude","event_longitude","event_participant_list_id","users","userId","uid","createdAt","serverValue","TIMESTAMP","onMapClick","latlng","latitude","lat","longitude","lng","marker","onChangeDateTime","date","loading","on","snapshot","usersObject","val","usersList","Object","keys","map","key","off","user","email","username","pathname","ADMIN","UserItemBase","onSendPasswordResetEmail","doPasswordReset","location","match","params","id","condition","roles","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nimport { compose } from 'recompose';\nimport DateTimePicker from 'react-datetime-picker';\n\nimport { withFirebase } from '../Firebase';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../Session';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\nimport { MyMap } from '../Geolocated';\n\n\nconst EventPage = () => (\n  <div>\n  <h1>Events</h1>\n  <p>The Event Page is accessible by every signed in admin user.</p>\n  <Switch>\n  <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n  <Route exact path={ROUTES.EVENT} component={UserList} />\n  </Switch>\n  </div>\n  );\n\n  class UserListBase extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: false,\n        users: [],        \n        event_name:'',\n        event_latitude: '',\n        event_longitude: '',        \n        event_participant_list_id: [],\n        marker: [],\n        event_datetime: '',\n\n      };\n    }\n    componentDidMount() {\n      this.setState({ loading: true });\n      this.props.firebase.users().on('value', snapshot => {\n        const usersObject = snapshot.val();\n        \n        const usersList = Object.keys(usersObject).map(key => ({\n          ...usersObject[key],\n          uid: key,\n        }));\n\n        this.setState({\n        users: usersList,\n        loading: false,\n        });\n      });\n    }\n    componentWillUnmount() {\n      this.props.firebase.users().off();\n    }\n    onChangeText = event => {\n        this.setState({ [event.target.name]: event.target.value });\n      }\n    \n    onCreateEvent = (event, authUser) => {\n        event.preventDefault();\n        console.log('datum' + this.state.event_datetime)\n        this.props.firebase.events().push({            \n            event_name: this.state.event_name,\n            event_latitude: this.state.event_latitude,\n            event_longitude: this.state.event_longitude,\n            event_datetime: this.state.event_datetime, //'Wed Feb 20 2019 14:45:13 GMT+0100 (centraleuropeisk normaltid)',            \n            event_participant_list_id: this.state.users,\n            userId: authUser.uid,\n            createdAt: this.props.firebase.serverValue.TIMESTAMP,\n        });   \n         \n        this.setState({             \n            event_name:'',\n            event_latitude: '',\n            event_longitude: '',\n            event_datetime: '',\n            event_participant_list_id: [],\n         });    \n        \n    }\n    onMapClick = (event) => {\n      console.log('koordinater: ' + event.latlng);\n      const latitude = event.latlng.lat;\n      const longitude = event.latlng.lng;\n      this.state.marker=[];\n      const marker = this.state.marker;\n      marker.push({latitude: latitude, longitude: longitude});\n      this.setState({event_latitude: latitude, event_longitude: longitude, marker: marker});\n    }\n    onChangeDateTime = date => this.setState({ date })\n\n    // makeMarker = (users, markers) => {\n\n    //   const userList = this.state.users;\n    //   const markerList = userList.map(user =>{\n          \n    //       return {latitude: user.position.latitude, longitude: user.position.longitude, username: user.username, perc: this.getRandomNumber() };\n    //   });\n  \n    //   return markerList;\n  \n    // }\n\n    render() {\n      const { users, loading, event_name, event_latitude, event_longitude, event_datetime, event_participant_list_id } = this.state;\n      \n      return (\n          <AuthUserContext.Consumer>\n          {authUser => (\n            <form onSubmit={event => this.onCreateEvent(event, authUser)}>\n          <input\n            name=\"event_name\"\n            type=\"text\"\n            value={event_name}\n            onChange={this.onChangeText}\n            placeholder='Event name'\n          />\n          <input\n            name=\"event_longitude\"\n            type=\"text\"\n            value={event_longitude}\n            onChange={this.onChangeText}\n            placeholder='Longitude'\n          />\n          <input\n            name=\"event_latitude\"\n            type=\"text\"\n            value={event_latitude}\n            onChange={this.onChangeText}\n            placeholder='Latitude'\n          />\n          <input\n            name=\"event_datetime\"\n            type=\"text\"\n            value={event_datetime}\n            onChange={this.onChangeText}\n            placeholder='Time'\n          />\n          <input\n            name=\"event_participant_list_id\"\n            type=\"text\"\n            value={event_participant_list_id}\n            onChange={this.onChangeText}\n            placeholder='List of Participants'\n          />\n\n          \n          \n          <button type=\"submit\">Send</button>\n            {console.log(this.state.marker)}\n          <div>\n          <DateTimePicker\n            onChange={this.onChangeDateTime}\n            value={this.state.event_datetime}\n          />\n            Klick on map to select location for event\n          <MyMap perc={'10'}\n            markers={this.state.marker}\n            position={[80,100]}\n            zoom={13}\n            onMapClick={(event) => this.onMapClick(event)}\n          />\n        \n        <h2>List of events</h2>\n        {loading && <div>Loading ...</div>}\n          <ul>\n           {users.map(user => (\n              <li key={user.uid}>\n                <span>\n                  <strong>ID:</strong> {user.uid}\n                </span>\n                Admin Dashboard 143\n                <span>\n                   <strong>E-Mail:</strong> {user.email}\n                </span>\n                <span>\n                  <strong>Username:</strong> {user.username}\n                </span>\n                <span>\n                  <Link to={{\n                  pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                  state: { user },\n                  }}>\n                  Details\n                  </Link>\n                </span>\n              </li>\n            ))}\n          </ul>\n      </div>\n        </form>   \n        )}\n        </AuthUserContext.Consumer>\n      );   \n    }\n}\n\nclass UserItemBase extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: false,\n        user: null,\n        ...props.location.state,\n      };\n    }\n    componentDidMount() {\n      if (this.state.user) {\n        return;\n      }\n      this.setState({ loading: true });\n      this.props.firebase\n      .user(this.props.match.params.id)\n      .on('value', snapshot => {\n        this.setState({\n          user: snapshot.val(),\n          loading: false,\n        });\n      });\n    }\n    componentWillUnmount() {\n      this.props.firebase.user(this.props.match.params.id).off();\n    }\n\n    onSendPasswordResetEmail = () => {\n      this.props.firebase.doPasswordReset(this.state.user.email);\n    }\n    \n    render() {\n      const { user, loading } = this.state;\n        return (\n          <div>\n            <h2>User ({this.props.match.params.id})</h2>\n            {loading && <div>Loading ...</div>}\n            {user && (\n            <div>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              \n              </span>\n              <span>\n                <button\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n                >\n                  Send Password Reset\n                </button>\n              </span>\n            </div>\n          )}\n          </div>\n      );\n    }\n  }\n\n\n\nconst condition = authUser => authUser && authUser.roles.includes(ROLES.ADMIN);\n\nconst UserList = withFirebase(UserListBase);\nconst UserItem = withFirebase(UserItemBase);\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n  withFirebase,\n  )(EventPage);\n"]},"metadata":{},"sourceType":"module"}