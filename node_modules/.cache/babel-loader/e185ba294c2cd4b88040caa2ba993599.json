{"ast":null,"code":"import _defineProperty from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tod/Webb/grextest/Grex/src/components/Account/index.js\";\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { AuthUserContext, withAuthorization, withEmailVerification } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nimport { withFirebase } from '../Firebase';\nvar SIGN_IN_METHODS = [{\n  id: 'password',\n  provider: null\n}, {\n  id: 'google.com',\n  provider: 'googleProvider'\n}, {\n  id: 'facebook.com',\n  provider: 'facebookProvider'\n}];\n\nvar AccountPage = function AccountPage() {\n  return React.createElement(AuthUserContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, function (authUser) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Account: \", authUser.email), React.createElement(PasswordForgetForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(PasswordChangeForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(LoginManagement, {\n      authUser: authUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  });\n};\n\nvar LoginManagementBase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginManagementBase, _Component);\n\n  function LoginManagementBase(props) {\n    var _this;\n\n    _classCallCheck(this, LoginManagementBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginManagementBase).call(this, props));\n\n    _this.onDefaultLoginLink = function (password) {\n      var credential = _this.props.firebase.emailAuthProvider.credential(_this.props.authUser.email, password);\n\n      _this.props.firebase.auth.currentUser.linkAndRetrieveDataWithCredential(credential).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.fetchSignInMethods = function () {\n      _this.props.firebase.auth.fetchSignInMethodsForEmail(_this.props.authUser.email).then(function (activeSignInMethods) {\n        return _this.setState({\n          activeSignInMethods: activeSignInMethods,\n          error: null\n        });\n      }).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onSocialLoginLink = function (provider) {\n      _this.props.firebase.auth.currentUser.linkWithPopup(_this.props.firebase[provider]).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onUnlink = function (providerId) {\n      _this.props.firebase.auth.currentUser.unlink(providerId).then(_this.fetchSignInMethods).catch(function (error) {\n        return _this.setState({\n          error: error\n        });\n      });\n    };\n\n    _this.onDefaultLoginLink = function () {};\n\n    _this.state = {\n      activeSignInMethods: [],\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(LoginManagementBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchSignInMethods();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          activeSignInMethods = _this$state.activeSignInMethods,\n          error = _this$state.error;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Sign In Methods:\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, SIGN_IN_METHODS.map(function (signInMethod) {\n        var onlyOneLeft = activeSignInMethods.length === 1;\n        var isEnabled = activeSignInMethods.includes(signInMethod.id);\n        return React.createElement(\"li\", {\n          key: signInMethod.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, signInMethod.id === 'password' ? React.createElement(DefaultLoginToggle, {\n          onlyOneLeft: onlyOneLeft,\n          isEnabled: isEnabled,\n          signInMethod: signInMethod,\n          onLink: _this2.onDefaultLoginLink,\n          onUnlink: _this2.onUnlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }) : React.createElement(SocialLoginToggle, {\n          onlyOneLeft: onlyOneLeft,\n          isEnabled: isEnabled,\n          signInMethod: signInMethod,\n          onLink: _this2.onSocialLoginLink,\n          onUnlink: _this2.onUnlink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }));\n      })), error && error.message);\n    }\n  }]);\n\n  return LoginManagementBase;\n}(Component);\n\nvar SocialLoginToggle = function SocialLoginToggle(_ref) {\n  var onlyOneLeft = _ref.onlyOneLeft,\n      isEnabled = _ref.isEnabled,\n      signInMethod = _ref.signInMethod,\n      onLink = _ref.onLink,\n      onUnlink = _ref.onUnlink;\n  return isEnabled ? React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return onUnlink(signInMethod.id);\n    },\n    disabled: onlyOneLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Deactivate \", signInMethod.id) : React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return onLink(signInMethod.provider);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Link \", signInMethod.id);\n};\n\nvar DefaultLoginToggle =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(DefaultLoginToggle, _Component2);\n\n  function DefaultLoginToggle(props) {\n    var _this3;\n\n    _classCallCheck(this, DefaultLoginToggle);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(DefaultLoginToggle).call(this, props));\n\n    _this3.onSubmit = function (event) {\n      event.preventDefault();\n\n      _this3.props.onLink(_this3.state.passwordOne);\n\n      _this3.setState({\n        passwordOne: '',\n        passwordTwo: ''\n      });\n    };\n\n    _this3.onChange = function (event) {\n      _this3.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this3.state = {\n      passwordOne: '',\n      passwordTwo: ''\n    };\n    return _this3;\n  }\n\n  _createClass(DefaultLoginToggle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onlyOneLeft = _this$props.onlyOneLeft,\n          isEnabled = _this$props.isEnabled,\n          signInMethod = _this$props.signInMethod,\n          onUnlink = _this$props.onUnlink;\n      var _this$state2 = this.state,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo;\n      var isInvalid = passwordOne !== passwordTwo || passwordOne === '';\n      return isEnabled ? React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return onUnlink(signInMethod.id);\n        },\n        disabled: onlyOneLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Deactivate \", signInMethod.id) : React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"passwordOne\",\n        value: passwordOne,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"passwordTwo\",\n        value: passwordTwo,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Confirm New Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        disabled: isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Link \", signInMethod.id));\n    }\n  }]);\n\n  return DefaultLoginToggle;\n}(Component);\n\nvar LoginManagement = withFirebase(LoginManagementBase);\n\nvar condition = function condition(authUser) {\n  return !!authUser;\n};\n\nexport default compose(withEmailVerification, withAuthorization(condition))(AccountPage);","map":{"version":3,"sources":["/Users/tod/Webb/grextest/Grex/src/components/Account/index.js"],"names":["React","Component","compose","AuthUserContext","withAuthorization","withEmailVerification","PasswordForgetForm","PasswordChangeForm","withFirebase","SIGN_IN_METHODS","id","provider","AccountPage","authUser","email","LoginManagementBase","props","onDefaultLoginLink","password","credential","firebase","emailAuthProvider","auth","currentUser","linkAndRetrieveDataWithCredential","then","fetchSignInMethods","catch","error","setState","fetchSignInMethodsForEmail","activeSignInMethods","onSocialLoginLink","linkWithPopup","onUnlink","providerId","unlink","state","map","signInMethod","onlyOneLeft","length","isEnabled","includes","message","SocialLoginToggle","onLink","DefaultLoginToggle","onSubmit","event","preventDefault","passwordOne","passwordTwo","onChange","target","name","value","isInvalid","LoginManagement","condition"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport {\n  AuthUserContext,\n  withAuthorization,\n  withEmailVerification,\n  } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nimport { withFirebase } from '../Firebase';\n\nconst SIGN_IN_METHODS = [\n  {\n  id: 'password',\n  provider: null,\n  },\n  {\n  id: 'google.com',\n  provider: 'googleProvider',\n  },\n  {\n  id: 'facebook.com',\n  provider: 'facebookProvider',\n  },\n  \n  ];\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1>Account: {authUser.email}</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n        <LoginManagement authUser={authUser} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nclass LoginManagementBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSignInMethods: [],\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSignInMethods();\n  }\n\n  onDefaultLoginLink = password => {\n    const credential = this.props.firebase.emailAuthProvider.credential(\n      this.props.authUser.email,\n      password,\n    );\n    this.props.firebase.auth.currentUser\n      .linkAndRetrieveDataWithCredential(credential)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n    };\n\n  fetchSignInMethods = () => {\n    this.props.firebase.auth\n      .fetchSignInMethodsForEmail(this.props.authUser.email)\n        .then(activeSignInMethods =>\n          this.setState({ activeSignInMethods, error: null }),\n        )\n        .catch(error => this.setState({ error }));\n  }\n  onSocialLoginLink = provider => {\n    this.props.firebase.auth.currentUser\n      .linkWithPopup(this.props.firebase[provider])\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n  onUnlink = providerId => {\n    this.props.firebase.auth.currentUser\n      .unlink(providerId)\n      .then(this.fetchSignInMethods)\n      .catch(error => this.setState({ error }));\n  };\n\n  onDefaultLoginLink = () => {\n    \n  }\n\n  render() {\n    const { activeSignInMethods, error } = this.state;\n    return (\n      <div>\n      Sign In Methods:\n      <ul>\n      {SIGN_IN_METHODS.map(signInMethod => {\n        const onlyOneLeft = activeSignInMethods.length === 1;\n        const isEnabled = activeSignInMethods.includes(\n        signInMethod.id,\n        );\n\n        return (\n          <li key={signInMethod.id}>\n          {signInMethod.id === 'password' ? (\n            <DefaultLoginToggle\n            onlyOneLeft={onlyOneLeft}\n            isEnabled={isEnabled}\n            signInMethod={signInMethod}\n            onLink={this.onDefaultLoginLink}\n            onUnlink={this.onUnlink}\n            />\n            ) : (\n            <SocialLoginToggle\n            onlyOneLeft={onlyOneLeft}\n            isEnabled={isEnabled}\n            signInMethod={signInMethod}\n            onLink={this.onSocialLoginLink}\n            onUnlink={this.onUnlink}\n            />\n            )}\n          </li>\n        );\n      })}\n      </ul>\n      {error && error.message}\n      </div>\n    );\n  }\n}\n\nconst SocialLoginToggle = ({\n                    onlyOneLeft,\n                    isEnabled,\n                    signInMethod,\n                    onLink,\n                    onUnlink,\n                    }) =>\n                    isEnabled ? (\n                      <button\n                      type=\"button\"\n                      onClick={() => onUnlink(signInMethod.id)}\n                      disabled={onlyOneLeft}\n                      >\n                      Deactivate {signInMethod.id}\n                      </button>\n                    ) : (\n                      <button\n                      type=\"button\"\n                      onClick={() => onLink(signInMethod.provider)}\n                      >\n                      Link {signInMethod.id}\n                      </button>\n);\n\nclass DefaultLoginToggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { passwordOne: '', passwordTwo: '' };\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.onLink(this.state.passwordOne);\n    this.setState({ passwordOne: '', passwordTwo: '' });\n  };\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  render() {\n    const {\n    onlyOneLeft,\n    isEnabled,\n    signInMethod,\n    onUnlink,\n    } = this.props;\n\n    const { passwordOne, passwordTwo } = this.state;\n    const isInvalid =\n    passwordOne !== passwordTwo || passwordOne === '';\n    return isEnabled ? (\n      <button\n      type=\"button\"\n      onClick={() => onUnlink(signInMethod.id)}\n      disabled={onlyOneLeft}\n      >\n      Deactivate {signInMethod.id}\n      </button>\n    ) : (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Link {signInMethod.id}\n        </button>\n      </form>\n    );\n  }\n}\n\n\nconst LoginManagement = withFirebase(LoginManagementBase);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n  )(AccountPage);"]},"metadata":{},"sourceType":"module"}