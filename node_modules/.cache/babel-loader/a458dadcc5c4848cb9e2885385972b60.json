{"ast":null,"code":"import _objectSpread from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tod/Webb/grextest/Grex/src/components/Admin/index.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from '../Firebase';\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\nvar AdminPage = function AdminPage() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Admin\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"The Admin Page is accessible by every signed in admin user.\"), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: ROUTES.ADMIN_DETAILS,\n    component: UserItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: ROUTES.ADMIN,\n    component: UserList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n};\n\nvar UserListBase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserListBase, _Component);\n\n  function UserListBase(props) {\n    var _this;\n\n    _classCallCheck(this, UserListBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserListBase).call(this, props));\n    _this.state = {\n      loading: false,\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(UserListBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      this.props.firebase.users().on('value', function (snapshot) {\n        var usersObject = snapshot.val();\n        var usersList = Object.keys(usersObject).map(function (key) {\n          return _objectSpread({}, usersObject[key], {\n            uid: key\n          });\n        });\n\n        _this2.setState({\n          users: usersList,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.firebase.users().off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          users = _this$state.users,\n          loading = _this$state.loading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Users\"), loading && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Loading ...\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, users.map(function (user) {\n        return React.createElement(\"li\", {\n          key: user.uid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"ID:\"), \" \", user.uid), \"Admin Dashboard 143\", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"E-Mail:\"), \" \", user.email), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Username:\"), \" \", user.username), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: {\n            pathname: \"\".concat(ROUTES.ADMIN, \"/\").concat(user.uid),\n            state: {\n              user: user\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Details\")));\n      })));\n    }\n  }]);\n\n  return UserListBase;\n}(Component);\n\nvar UserItemBase =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(UserItemBase, _Component2);\n\n  function UserItemBase(props) {\n    var _this3;\n\n    _classCallCheck(this, UserItemBase);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(UserItemBase).call(this, props));\n\n    _this3.onSendPasswordResetEmail = function () {\n      _this3.props.firebase.doPasswordReset(_this3.state.user.email);\n    };\n\n    _this3.state = _objectSpread({\n      loading: false,\n      user: null\n    }, props.location.state);\n    return _this3;\n  }\n\n  _createClass(UserItemBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      if (this.state.user) {\n        return;\n      }\n\n      this.setState({\n        loading: true\n      });\n      this.props.firebase.user(this.props.match.params.id).on('value', function (snapshot) {\n        _this4.setState({\n          user: snapshot.val(),\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.firebase.user(this.props.match.params.id).off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          user = _this$state2.user,\n          loading = _this$state2.loading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"User (\", this.props.match.params.id, \")\"), loading && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Loading ...\"), user && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"ID:\"), \" \", user.uid), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"E-Mail:\"), \" \", user.email), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Username:\"), \" \", user.username), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.onSendPasswordResetEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Send Password Reset\"))));\n    }\n  }]);\n\n  return UserItemBase;\n}(Component);\n\nvar condition = function condition(authUser) {\n  return authUser && authUser.roles.includes(ROLES.ADMIN);\n};\n\nvar UserList = withFirebase(UserListBase);\nvar UserItem = withFirebase(UserItemBase);\nexport default compose(withEmailVerification, withAuthorization(condition), withFirebase)(AdminPage);","map":{"version":3,"sources":["/Users/tod/Webb/grextest/Grex/src/components/Admin/index.js"],"names":["React","Component","Switch","Route","Link","compose","withFirebase","withAuthorization","withEmailVerification","ROLES","ROUTES","AdminPage","ADMIN_DETAILS","UserItem","ADMIN","UserList","UserListBase","props","state","loading","users","setState","firebase","on","snapshot","usersObject","val","usersList","Object","keys","map","key","uid","off","user","email","username","pathname","UserItemBase","onSendPasswordResetEmail","doPasswordReset","location","match","params","id","condition","authUser","roles","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport { withAuthorization, withEmailVerification } from '../Session';\nimport * as ROLES from '../../constants/roles';\nimport * as ROUTES from '../../constants/routes';\n\n\nconst AdminPage = () => (\n  <div>\n  <h1>Admin</h1>\n  <p>The Admin Page is accessible by every signed in admin user.</p>\n  <Switch>\n  <Route exact path={ROUTES.ADMIN_DETAILS} component={UserItem} />\n  <Route exact path={ROUTES.ADMIN} component={UserList} />\n  </Switch>\n  </div>\n  );\n\n  class UserListBase extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: false,\n        users: [],\n      };\n    }\n    componentDidMount() {\n      this.setState({ loading: true });\n      this.props.firebase.users().on('value', snapshot => {\n        const usersObject = snapshot.val();\n        \n        const usersList = Object.keys(usersObject).map(key => ({\n          ...usersObject[key],\n          uid: key,\n        }));\n\n        this.setState({\n        users: usersList,\n        loading: false,\n        });\n      });\n    }\n    componentWillUnmount() {\n      this.props.firebase.users().off();\n    }\n    render() {\n      const { users, loading } = this.state;\n\n      return (\n        <div>\n          <h2>Users</h2>\n          {loading && <div>Loading ...</div>}\n            <ul>\n             {users.map(user => (\n                <li key={user.uid}>\n                  <span>\n                    <strong>ID:</strong> {user.uid}\n                  </span>\n                  Admin Dashboard 143\n                  <span>\n                     <strong>E-Mail:</strong> {user.email}\n                  </span>\n                  <span>\n                    <strong>Username:</strong> {user.username}\n                  </span>\n                  <span>\n                    <Link to={{\n                    pathname: `${ROUTES.ADMIN}/${user.uid}`,\n                    state: { user },\n                    }}>\n                    Details\n                    </Link>\n                  </span>\n                </li>\n              ))}\n            </ul>\n        </div>\n      );   \n    }\n}\n\nclass UserItemBase extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: false,\n        user: null,\n        ...props.location.state,\n      };\n    }\n    componentDidMount() {\n      if (this.state.user) {\n        return;\n      }\n      this.setState({ loading: true });\n      this.props.firebase\n      .user(this.props.match.params.id)\n      .on('value', snapshot => {\n        this.setState({\n          user: snapshot.val(),\n          loading: false,\n        });\n      });\n    }\n    componentWillUnmount() {\n      this.props.firebase.user(this.props.match.params.id).off();\n    }\n\n    onSendPasswordResetEmail = () => {\n      this.props.firebase.doPasswordReset(this.state.user.email);\n    }\n    \n    render() {\n      const { user, loading } = this.state;\n        return (\n          <div>\n            <h2>User ({this.props.match.params.id})</h2>\n            {loading && <div>Loading ...</div>}\n            {user && (\n            <div>\n              <span>\n                <strong>ID:</strong> {user.uid}\n              </span>\n              <span>\n                <strong>E-Mail:</strong> {user.email}\n              </span>\n              <span>\n                <strong>Username:</strong> {user.username}\n              \n              </span>\n              <span>\n                <button\n                type=\"button\"\n                onClick={this.onSendPasswordResetEmail}\n                >\n                  Send Password Reset\n                </button>\n              </span>\n            </div>\n          )}\n          </div>\n      );\n    }\n  }\n\n\n\nconst condition = authUser => authUser && authUser.roles.includes(ROLES.ADMIN);\n\nconst UserList = withFirebase(UserListBase);\nconst UserItem = withFirebase(UserItemBase);\n\nexport default compose(\n  withEmailVerification,\n  withAuthorization(condition),\n  withFirebase,\n  )(AdminPage);\n"]},"metadata":{},"sourceType":"module"}