{"ast":null,"code":"import _defineProperty from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tod/Webb/grextest/Grex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tod/Webb/grextest/Grex/src/components/SignUp/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nvar SignUpPage = function SignUpPage() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"SignUp\"), React.createElement(SignUpForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nvar INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin: false,\n  error: null\n};\nvar ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\nvar ERROR_MSG_ACCOUNT_EXISTS = \"\\nAn account with this E-Mail address already exists.\\nTry to login with this account instead. If you think the\\naccount is already used from one of the social logins, try\\nto sign-in with one of them. Afterward, associate your accounts\\non your personal account page.\\n\";\n\nvar SignUpFormBase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUpFormBase, _Component);\n\n  function SignUpFormBase(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpFormBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUpFormBase).call(this, props));\n\n    _this.onSubmit = function (event) {\n      var _this$state = _this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          passwordOne = _this$state.passwordOne,\n          isAdmin = _this$state.isAdmin;\n      var roles = [];\n\n      if (isAdmin) {\n        roles.push(ROLES.ADMIN);\n      }\n\n      _this.props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(function (authUser) {\n        // Create a user in your Firebase realtime database\n        _this.props.firebase.user(authUser.user.uid).set({\n          username: username,\n          email: email,\n          roles: roles,\n          position: {\n            latitude: 0,\n            longitude: 0\n          }\n        }).then(function () {\n          return _this.props.firebase.doSendEmailVerification();\n        }).then(function () {\n          _this.setState(_objectSpread({}, INITIAL_STATE));\n\n          _this.props.history.push(ROUTES.HOME);\n        }).catch(function (error) {\n          if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n            error.message = ERROR_MSG_ACCOUNT_EXISTS;\n          }\n\n          _this.setState({\n            error: error\n          });\n        });\n      }).catch(function (error) {\n        _this.setState({\n          error: error\n        });\n      });\n\n      event.preventDefault();\n    };\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.onChangeCheckbox = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.checked));\n    };\n\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    return _this;\n  }\n\n  _createClass(SignUpFormBase, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          passwordOne = _this$state2.passwordOne,\n          passwordTwo = _this$state2.passwordTwo,\n          isAdmin = _this$state2.isAdmin,\n          error = _this$state2.error;\n      var isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Admin:\", React.createElement(\"input\", {\n        name: \"isAdmin\",\n        type: \"checkbox\",\n        checked: isAdmin,\n        onChange: this.onChangeCheckbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        name: \"username\",\n        value: username,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Full Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"email\",\n        value: email,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Email Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"passwordOne\",\n        value: passwordOne,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"passwordTwo\",\n        value: passwordTwo,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        disabled: isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Sign Up\"), error && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, error.message), React.createElement(Link, {\n        to: ROUTES.SIGN_IN,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Back!\"));\n    }\n  }]);\n\n  return SignUpFormBase;\n}(Component);\n\nvar SignUpLink = function SignUpLink() {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Don't have an account? \", React.createElement(Link, {\n    to: ROUTES.SIGN_UP,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Sign Up\"));\n};\n\nvar SignUpForm = withRouter(withFirebase(SignUpFormBase));\nexport default SignUpPage;\nexport { SignUpForm, SignUpLink };","map":{"version":3,"sources":["/Users/tod/Webb/grextest/Grex/src/components/SignUp/index.js"],"names":["React","Component","Link","withRouter","withFirebase","ROUTES","ROLES","SignUpPage","INITIAL_STATE","username","email","passwordOne","passwordTwo","isAdmin","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","props","onSubmit","event","state","roles","push","ADMIN","firebase","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","position","latitude","longitude","doSendEmailVerification","setState","history","HOME","catch","code","message","preventDefault","onChange","target","name","value","onChangeCheckbox","checked","isInvalid","SIGN_IN","SignUpLink","SIGN_UP","SignUpForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport * as ROLES from '../../constants/roles';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  isAdmin: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\nconst ERROR_MSG_ACCOUNT_EXISTS = `\nAn account with this E-Mail address already exists.\nTry to login with this account instead. If you think the\naccount is already used from one of the social logins, try\nto sign-in with one of them. Afterward, associate your accounts\non your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n\n    const roles = [];\n    if (isAdmin) {\n      roles.push(ROLES.ADMIN);\n    }\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n            roles,\n            position: { latitude: 0, longitude: 0}\n          })\n          .then(() => {\n            return this.props.firebase.doSendEmailVerification();\n            })\n          .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME);\n          })\n          .catch(error => {\n            if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n              error.message = ERROR_MSG_ACCOUNT_EXISTS;\n            }\n            this.setState({ error });\n          });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n    };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <label>\n          Admin:\n          <input\n          name=\"isAdmin\"\n          type=\"checkbox\"\n          checked={isAdmin}\n          onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n        <Link to={ROUTES.SIGN_IN}>Back!</Link>\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n"]},"metadata":{},"sourceType":"module"}